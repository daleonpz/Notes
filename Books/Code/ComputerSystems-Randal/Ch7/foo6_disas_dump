
foo6:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x153>
  400248:	78 38                	js     400282 <_init-0x146>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 3f                	add    %bh,(%rdi)
  400285:	95                   	xchg   %eax,%ebp
  400286:	25 37 1d 35 8c       	and    $0x8c351d37,%eax
  40028b:	c7                   	(bad)  
  40028c:	73 45                	jae    4002d3 <_init-0xf5>
  40028e:	f2 aa                	repnz stos %al,%es:(%rdi)
  400290:	ab                   	stos   %eax,%es:(%rdi)
  400291:	04 fc                	add    $0xfc,%al
  400293:	d3 43 eb             	roll   %cl,-0x15(%rbx)
  400296:	04 e6                	add    $0xe6,%al

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	12 00                	adc    (%rax),%al
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	24 00                	and    $0x0,%al
  400302:	00 00                	add    %al,(%rax)
  400304:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40031c:	63 2e                	movslq (%rsi),%ebp
  40031e:	73 6f                	jae    40038f <_init-0x39>
  400320:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
  400325:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40032c:	6c                   	insb   (%dx),%es:(%rdi)
  40032d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400334:	72 74                	jb     4003aa <_init-0x1e>
  400336:	5f                   	pop    %rdi
  400337:	6d                   	insl   (%dx),%es:(%rdi)
  400338:	61                   	(bad)  
  400339:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  400340:	6f                   	outsl  %ds:(%rsi),(%dx)
  400341:	6e                   	outsb  %ds:(%rsi),(%dx)
  400342:	5f                   	pop    %rdi
  400343:	73 74                	jae    4003b9 <_init-0xf>
  400345:	61                   	(bad)  
  400346:	72 74                	jb     4003bc <_init-0xc>
  400348:	5f                   	pop    %rdi
  400349:	5f                   	pop    %rdi
  40034a:	00 47 4c             	add    %al,0x4c(%rdi)
  40034d:	49                   	rex.WB
  40034e:	42                   	rex.X
  40034f:	43 5f                	rex.XB pop %r15
  400351:	32 2e                	xor    (%rsi),%ch
  400353:	32 2e                	xor    (%rsi),%ch
  400355:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400358 <.gnu.version>:
  400358:	00 00                	add    %al,(%rax)
  40035a:	02 00                	add    (%rax),%al
  40035c:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    %eax,(%rax)
  400362:	01 00                	add    %eax,(%rax)
  400364:	01 00                	add    %eax,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	10 00                	adc    %al,(%rax)
  40036a:	00 00                	add    %al,(%rax)
  40036c:	00 00                	add    %al,(%rax)
  40036e:	00 00                	add    %al,(%rax)
  400370:	75 1a                	jne    40038c <_init-0x3c>
  400372:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400378:	33 00                	xor    (%rax),%eax
  40037a:	00 00                	add    %al,(%rax)
  40037c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  400384:	00 00                	add    %al,(%rax)
  400386:	00 00                	add    %al,(%rax)
  400388:	06                   	(bad)  
  400389:	00 00                	add    %al,(%rax)
  40038b:	00 02                	add    %al,(%rdx)
	...
  400395:	00 00                	add    %al,(%rax)
  400397:	00 f8                	add    %bh,%al
  400399:	0f 60 00             	punpcklbw (%rax),%mm0
  40039c:	00 00                	add    %al,(%rax)
  40039e:	00 00                	add    %al,(%rax)
  4003a0:	06                   	(bad)  
  4003a1:	00 00                	add    %al,(%rax)
  4003a3:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

00000000004003b0 <.rela.plt>:
  4003b0:	18 10                	sbb    %dl,(%rax)
  4003b2:	60                   	(bad)  
  4003b3:	00 00                	add    %al,(%rax)
  4003b5:	00 00                	add    %al,(%rax)
  4003b7:	00 07                	add    %al,(%rdi)
  4003b9:	00 00                	add    %al,(%rax)
  4003bb:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d8>
  4003d3:	48 85 c0             	test   %rax,%rax
  4003d6:	74 02                	je     4003da <_init+0x12>
  4003d8:	ff d0                	callq  *%rax
  4003da:	48 83 c4 08          	add    $0x8,%rsp
  4003de:	c3                   	retq   

Disassembly of section .plt:

00000000004003e0 <printf@plt-0x10>:
  4003e0:	ff 35 22 0c 20 00    	pushq  0x200c22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 24 0c 20 00    	jmpq   *0x200c24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003f0 <printf@plt>:
  4003f0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003f6:	68 00 00 00 00       	pushq  $0x0
  4003fb:	e9 e0 ff ff ff       	jmpq   4003e0 <_init+0x18>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 d0 05 40 00 	mov    $0x4005d0,%r8
  400416:	48 c7 c1 60 05 40 00 	mov    $0x400560,%rcx
  40041d:	48 c7 c7 f6 04 40 00 	mov    $0x4004f6,%rdi
  400424:	ff 15 c6 0b 20 00    	callq  *0x200bc6(%rip)        # 600ff0 <_DYNAMIC+0x1d0>
  40042a:	f4                   	hlt    
  40042b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400430 <deregister_tm_clones>:
  400430:	b8 37 10 60 00       	mov    $0x601037,%eax
  400435:	55                   	push   %rbp
  400436:	48 2d 30 10 60 00    	sub    $0x601030,%rax
  40043c:	48 83 f8 0e          	cmp    $0xe,%rax
  400440:	48 89 e5             	mov    %rsp,%rbp
  400443:	76 1b                	jbe    400460 <deregister_tm_clones+0x30>
  400445:	b8 00 00 00 00       	mov    $0x0,%eax
  40044a:	48 85 c0             	test   %rax,%rax
  40044d:	74 11                	je     400460 <deregister_tm_clones+0x30>
  40044f:	5d                   	pop    %rbp
  400450:	bf 30 10 60 00       	mov    $0x601030,%edi
  400455:	ff e0                	jmpq   *%rax
  400457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40045e:	00 00 
  400460:	5d                   	pop    %rbp
  400461:	c3                   	retq   
  400462:	0f 1f 40 00          	nopl   0x0(%rax)
  400466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40046d:	00 00 00 

0000000000400470 <register_tm_clones>:
  400470:	be 30 10 60 00       	mov    $0x601030,%esi
  400475:	55                   	push   %rbp
  400476:	48 81 ee 30 10 60 00 	sub    $0x601030,%rsi
  40047d:	48 c1 fe 03          	sar    $0x3,%rsi
  400481:	48 89 e5             	mov    %rsp,%rbp
  400484:	48 89 f0             	mov    %rsi,%rax
  400487:	48 c1 e8 3f          	shr    $0x3f,%rax
  40048b:	48 01 c6             	add    %rax,%rsi
  40048e:	48 d1 fe             	sar    %rsi
  400491:	74 15                	je     4004a8 <register_tm_clones+0x38>
  400493:	b8 00 00 00 00       	mov    $0x0,%eax
  400498:	48 85 c0             	test   %rax,%rax
  40049b:	74 0b                	je     4004a8 <register_tm_clones+0x38>
  40049d:	5d                   	pop    %rbp
  40049e:	bf 30 10 60 00       	mov    $0x601030,%edi
  4004a3:	ff e0                	jmpq   *%rax
  4004a5:	0f 1f 00             	nopl   (%rax)
  4004a8:	5d                   	pop    %rbp
  4004a9:	c3                   	retq   
  4004aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004b0 <__do_global_dtors_aux>:
  4004b0:	80 3d 79 0b 20 00 00 	cmpb   $0x0,0x200b79(%rip)        # 601030 <__TMC_END__>
  4004b7:	75 11                	jne    4004ca <__do_global_dtors_aux+0x1a>
  4004b9:	55                   	push   %rbp
  4004ba:	48 89 e5             	mov    %rsp,%rbp
  4004bd:	e8 6e ff ff ff       	callq  400430 <deregister_tm_clones>
  4004c2:	5d                   	pop    %rbp
  4004c3:	c6 05 66 0b 20 00 01 	movb   $0x1,0x200b66(%rip)        # 601030 <__TMC_END__>
  4004ca:	f3 c3                	repz retq 
  4004cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004d0 <frame_dummy>:
  4004d0:	bf 18 0e 60 00       	mov    $0x600e18,%edi
  4004d5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4004d9:	75 05                	jne    4004e0 <frame_dummy+0x10>
  4004db:	eb 93                	jmp    400470 <register_tm_clones>
  4004dd:	0f 1f 00             	nopl   (%rax)
  4004e0:	b8 00 00 00 00       	mov    $0x0,%eax
  4004e5:	48 85 c0             	test   %rax,%rax
  4004e8:	74 f1                	je     4004db <frame_dummy+0xb>
  4004ea:	55                   	push   %rbp
  4004eb:	48 89 e5             	mov    %rsp,%rbp
  4004ee:	ff d0                	callq  *%rax
  4004f0:	5d                   	pop    %rbp
  4004f1:	e9 7a ff ff ff       	jmpq   400470 <register_tm_clones>

00000000004004f6 <main>:
  4004f6:	55                   	push   %rbp
  4004f7:	48 89 e5             	mov    %rsp,%rbp
  4004fa:	e8 07 00 00 00       	callq  400506 <p2>
  4004ff:	b8 00 00 00 00       	mov    $0x0,%eax
  400504:	5d                   	pop    %rbp
  400505:	c3                   	retq   

0000000000400506 <p2>:
  400506:	55                   	push   %rbp
  400507:	48 89 e5             	mov    %rsp,%rbp
  40050a:	be 06 05 40 00       	mov    $0x400506,%esi
  40050f:	bf e4 05 40 00       	mov    $0x4005e4,%edi
  400514:	b8 00 00 00 00       	mov    $0x0,%eax
  400519:	e8 d2 fe ff ff       	callq  4003f0 <printf@plt>
  40051e:	be 06 05 40 00       	mov    $0x400506,%esi
  400523:	bf e4 05 40 00       	mov    $0x4005e4,%edi
  400528:	b8 00 00 00 00       	mov    $0x0,%eax
  40052d:	e8 be fe ff ff       	callq  4003f0 <printf@plt>
  400532:	b8 f7 04 40 00       	mov    $0x4004f7,%eax
  400537:	0f b6 00             	movzbl (%rax),%eax
  40053a:	0f be c0             	movsbl %al,%eax
  40053d:	89 c6                	mov    %eax,%esi
  40053f:	bf e4 05 40 00       	mov    $0x4005e4,%edi
  400544:	b8 00 00 00 00       	mov    $0x0,%eax
  400549:	e8 a2 fe ff ff       	callq  4003f0 <printf@plt>
  40054e:	90                   	nop
  40054f:	5d                   	pop    %rbp
  400550:	c3                   	retq   
  400551:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400558:	00 00 00 
  40055b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400560 <__libc_csu_init>:
  400560:	41 57                	push   %r15
  400562:	41 56                	push   %r14
  400564:	41 89 ff             	mov    %edi,%r15d
  400567:	41 55                	push   %r13
  400569:	41 54                	push   %r12
  40056b:	4c 8d 25 96 08 20 00 	lea    0x200896(%rip),%r12        # 600e08 <__frame_dummy_init_array_entry>
  400572:	55                   	push   %rbp
  400573:	48 8d 2d 96 08 20 00 	lea    0x200896(%rip),%rbp        # 600e10 <__init_array_end>
  40057a:	53                   	push   %rbx
  40057b:	49 89 f6             	mov    %rsi,%r14
  40057e:	49 89 d5             	mov    %rdx,%r13
  400581:	4c 29 e5             	sub    %r12,%rbp
  400584:	48 83 ec 08          	sub    $0x8,%rsp
  400588:	48 c1 fd 03          	sar    $0x3,%rbp
  40058c:	e8 37 fe ff ff       	callq  4003c8 <_init>
  400591:	48 85 ed             	test   %rbp,%rbp
  400594:	74 20                	je     4005b6 <__libc_csu_init+0x56>
  400596:	31 db                	xor    %ebx,%ebx
  400598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40059f:	00 
  4005a0:	4c 89 ea             	mov    %r13,%rdx
  4005a3:	4c 89 f6             	mov    %r14,%rsi
  4005a6:	44 89 ff             	mov    %r15d,%edi
  4005a9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005ad:	48 83 c3 01          	add    $0x1,%rbx
  4005b1:	48 39 dd             	cmp    %rbx,%rbp
  4005b4:	75 ea                	jne    4005a0 <__libc_csu_init+0x40>
  4005b6:	48 83 c4 08          	add    $0x8,%rsp
  4005ba:	5b                   	pop    %rbx
  4005bb:	5d                   	pop    %rbp
  4005bc:	41 5c                	pop    %r12
  4005be:	41 5d                	pop    %r13
  4005c0:	41 5e                	pop    %r14
  4005c2:	41 5f                	pop    %r15
  4005c4:	c3                   	retq   
  4005c5:	90                   	nop
  4005c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005cd:	00 00 00 

00000000004005d0 <__libc_csu_fini>:
  4005d0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004005d4 <_fini>:
  4005d4:	48 83 ec 08          	sub    $0x8,%rsp
  4005d8:	48 83 c4 08          	add    $0x8,%rsp
  4005dc:	c3                   	retq   

Disassembly of section .rodata:

00000000004005e0 <_IO_stdin_used>:
  4005e0:	01 00                	add    %eax,(%rax)
  4005e2:	02 00                	add    (%rax),%al
  4005e4:	30 78 25             	xor    %bh,0x25(%rax)
  4005e7:	78 0a                	js     4005f3 <__GNU_EH_FRAME_HDR+0x7>
	...

Disassembly of section .eh_frame_hdr:

00000000004005ec <__GNU_EH_FRAME_HDR>:
  4005ec:	01 1b                	add    %ebx,(%rbx)
  4005ee:	03 3b                	add    (%rbx),%edi
  4005f0:	38 00                	cmp    %al,(%rax)
  4005f2:	00 00                	add    %al,(%rax)
  4005f4:	06                   	(bad)  
  4005f5:	00 00                	add    %al,(%rax)
  4005f7:	00 f4                	add    %dh,%ah
  4005f9:	fd                   	std    
  4005fa:	ff                   	(bad)  
  4005fb:	ff 84 00 00 00 14 fe 	incl   -0x1ec0000(%rax,%rax,1)
  400602:	ff                   	(bad)  
  400603:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
  400607:	00 0a                	add    %cl,(%rdx)
  400609:	ff                   	(bad)  
  40060a:	ff                   	(bad)  
  40060b:	ff ac 00 00 00 1a ff 	ljmp   *-0xe60000(%rax,%rax,1)
  400612:	ff                   	(bad)  
  400613:	ff cc                	dec    %esp
  400615:	00 00                	add    %al,(%rax)
  400617:	00 74 ff ff          	add    %dh,-0x1(%rdi,%rdi,8)
  40061b:	ff                   	(bad)  
  40061c:	ec                   	in     (%dx),%al
  40061d:	00 00                	add    %al,(%rax)
  40061f:	00 e4                	add    %ah,%ah
  400621:	ff                   	(bad)  
  400622:	ff                   	(bad)  
  400623:	ff 34 01             	pushq  (%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400628 <__FRAME_END__-0x110>:
  400628:	14 00                	adc    $0x0,%al
  40062a:	00 00                	add    %al,(%rax)
  40062c:	00 00                	add    %al,(%rax)
  40062e:	00 00                	add    %al,(%rax)
  400630:	01 7a 52             	add    %edi,0x52(%rdx)
  400633:	00 01                	add    %al,(%rcx)
  400635:	78 10                	js     400647 <__GNU_EH_FRAME_HDR+0x5b>
  400637:	01 1b                	add    %ebx,(%rbx)
  400639:	0c 07                	or     $0x7,%al
  40063b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400641:	00 00                	add    %al,(%rax)
  400643:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400646:	00 00                	add    %al,(%rax)
  400648:	b8 fd ff ff 2b       	mov    $0x2bfffffd,%eax
	...
  400655:	00 00                	add    %al,(%rax)
  400657:	00 14 00             	add    %dl,(%rax,%rax,1)
  40065a:	00 00                	add    %al,(%rax)
  40065c:	00 00                	add    %al,(%rax)
  40065e:	00 00                	add    %al,(%rax)
  400660:	01 7a 52             	add    %edi,0x52(%rdx)
  400663:	00 01                	add    %al,(%rcx)
  400665:	78 10                	js     400677 <__GNU_EH_FRAME_HDR+0x8b>
  400667:	01 1b                	add    %ebx,(%rbx)
  400669:	0c 07                	or     $0x7,%al
  40066b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400671:	00 00                	add    %al,(%rax)
  400673:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400676:	00 00                	add    %al,(%rax)
  400678:	68 fd ff ff 20       	pushq  $0x20fffffd
  40067d:	00 00                	add    %al,(%rax)
  40067f:	00 00                	add    %al,(%rax)
  400681:	0e                   	(bad)  
  400682:	10 46 0e             	adc    %al,0xe(%rsi)
  400685:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400688:	0b 77 08             	or     0x8(%rdi),%esi
  40068b:	80 00 3f             	addb   $0x3f,(%rax)
  40068e:	1a 3b                	sbb    (%rbx),%bh
  400690:	2a 33                	sub    (%rbx),%dh
  400692:	24 22                	and    $0x22,%al
  400694:	00 00                	add    %al,(%rax)
  400696:	00 00                	add    %al,(%rax)
  400698:	1c 00                	sbb    $0x0,%al
  40069a:	00 00                	add    %al,(%rax)
  40069c:	44 00 00             	add    %r8b,(%rax)
  40069f:	00 56 fe             	add    %dl,-0x2(%rsi)
  4006a2:	ff                   	(bad)  
  4006a3:	ff 10                	callq  *(%rax)
  4006a5:	00 00                	add    %al,(%rax)
  4006a7:	00 00                	add    %al,(%rax)
  4006a9:	41 0e                	rex.B (bad) 
  4006ab:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006b1:	4b 0c 07             	rex.WXB or $0x7,%al
  4006b4:	08 00                	or     %al,(%rax)
  4006b6:	00 00                	add    %al,(%rax)
  4006b8:	1c 00                	sbb    $0x0,%al
  4006ba:	00 00                	add    %al,(%rax)
  4006bc:	64 00 00             	add    %al,%fs:(%rax)
  4006bf:	00 46 fe             	add    %al,-0x2(%rsi)
  4006c2:	ff                   	(bad)  
  4006c3:	ff 4b 00             	decl   0x0(%rbx)
  4006c6:	00 00                	add    %al,(%rax)
  4006c8:	00 41 0e             	add    %al,0xe(%rcx)
  4006cb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006d1:	02 46 0c             	add    0xc(%rsi),%al
  4006d4:	07                   	(bad)  
  4006d5:	08 00                	or     %al,(%rax)
  4006d7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  4006db:	00 84 00 00 00 80 fe 	add    %al,-0x1800000(%rax,%rax,1)
  4006e2:	ff                   	(bad)  
  4006e3:	ff 65 00             	jmpq   *0x0(%rbp)
  4006e6:	00 00                	add    %al,(%rax)
  4006e8:	00 42 0e             	add    %al,0xe(%rdx)
  4006eb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  4006f1:	8e 03                	mov    (%rbx),%es
  4006f3:	45 0e                	rex.RB (bad) 
  4006f5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  4006fb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701549 <_end+0xffffffff86100511>
  400701:	06                   	(bad)  
  400702:	48 0e                	rex.W (bad) 
  400704:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  40070a:	72 0e                	jb     40071a <__GNU_EH_FRAME_HDR+0x12e>
  40070c:	38 41 0e             	cmp    %al,0xe(%rcx)
  40070f:	30 41 0e             	xor    %al,0xe(%rcx)
  400712:	28 42 0e             	sub    %al,0xe(%rdx)
  400715:	20 42 0e             	and    %al,0xe(%rdx)
  400718:	18 42 0e             	sbb    %al,0xe(%rdx)
  40071b:	10 42 0e             	adc    %al,0xe(%rdx)
  40071e:	08 00                	or     %al,(%rax)
  400720:	14 00                	adc    $0x0,%al
  400722:	00 00                	add    %al,(%rax)
  400724:	cc                   	int3   
  400725:	00 00                	add    %al,(%rax)
  400727:	00 a8 fe ff ff 02    	add    %ch,0x2fffffe(%rax)
	...

0000000000400738 <__FRAME_END__>:
  400738:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e08 <__frame_dummy_init_array_entry>:
  600e08:	d0 04 40             	rolb   (%rax,%rax,2)
  600e0b:	00 00                	add    %al,(%rax)
  600e0d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e10 <__do_global_dtors_aux_fini_array_entry>:
  600e10:	b0 04                	mov    $0x4,%al
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e18 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e20 <_DYNAMIC>:
  600e20:	01 00                	add    %eax,(%rax)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	0c 00                	or     $0x0,%al
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	c8 03 40 00          	enterq $0x4003,$0x0
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	0d 00 00 00 00       	or     $0x0,%eax
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 d4                	add    %dl,%ah
  600e49:	05 40 00 00 00       	add    $0x40,%eax
  600e4e:	00 00                	add    %al,(%rax)
  600e50:	19 00                	sbb    %eax,(%rax)
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	08 0e                	or     %cl,(%rsi)
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 1b                	add    %bl,(%rbx)
  600e61:	00 00                	add    %al,(%rax)
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 08                	add    %cl,(%rax)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 1a                	add    %bl,(%rdx)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 10                	add    %dl,(%rax)
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	08 00                	or     %al,(%rax)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0x85>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 18                	add    %bl,(%rax)
  600ea9:	03 40 00             	add    0x0(%rax),%eax
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	06                   	(bad)  
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0a                	add    %cl,(%rdx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 3f                	add    %bh,(%rdi)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 0b                	add    %cl,(%rbx)
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 18                	add    %bl,(%rax)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600ee5 <_DYNAMIC+0xc5>
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	18 00                	sbb    %al,(%rax)
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	14 00                	adc    $0x0,%al
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 b0 03 40 00 00    	add    %dh,0x4003(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 07                	add    %al,(%rdi)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 08                	add    %cl,(%rax)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 30                	add    %dh,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 09                	add    %cl,(%rcx)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 18                	add    %bl,(%rax)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 fe                	add    %bh,%dh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 60 03             	add    %ah,0x3(%rax)
  600f6a:	40 00 00             	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 ff                	add    %bh,%bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 01                	add    %al,(%rcx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 58 03             	add    %bl,0x3(%rax)
  600f8a:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	20 0e                	and    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 f6                	add    %dh,%dh
  601019:	03 40 00             	add    0x0(%rax),%eax
  60101c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601020 <__data_start>:
	...

0000000000601028 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601030 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	36 2e 31 2e          	ss xor %ebp,%cs:(%rsi)
   f:	31 20                	xor    %esp,(%rax)
  11:	32 30                	xor    (%rax),%dh
  13:	31 36                	xor    %esi,(%rsi)
  15:	30 38                	xor    %bh,(%rax)
  17:	30 32                	xor    %dh,(%rdx)
	...
